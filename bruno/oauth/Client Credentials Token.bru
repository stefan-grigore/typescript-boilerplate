meta {
  name: Client Credentials Token
  type: http
  seq: 1
}

post {
  url: {{base_url}}/oauth/tokens
  body: formUrlEncoded
  auth: inherit
}

headers {
  Content-Type: application/x-www-form-urlencoded
}

body:form-urlencoded {
  grant_type: client_credentials
  client_id: {{client_id}}
  client_secret: {{client_secret}}
  scope: {{scope}}
}

script:post-response {
  // Save access_token to environment for later requests
  if (res.getStatus() === 200) {
    const data = res.getBody();
    bru.setEnvVar('access_token', data.access_token);
    bru.setEnvVar('token_type', data.token_type || 'Bearer');
    bru.setEnvVar('expires_in', String(data.expires_in));
    if (data.scope) bru.setEnvVar('scope', data.scope);
  } else {
    bru.deleteEnvVar('access_token');
  }
}

settings {
  encodeUrl: true
}

docs {
  Get a bearer token using client_credentials grant
}
